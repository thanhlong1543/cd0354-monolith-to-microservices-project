apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user
  labels:
    app: backend-user
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-user
  template:
    metadata:
      labels:
        app: backend-user
    spec:
      containers:
        - name: backend-user
          imagePullPolicy: Always
          image: thanhlong1543/udagram-api-user:v1
          envFrom:
            - configMapRef:
                name: env-configmap
            - configMapRef:
                name: env-secret
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: env-secret
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: POSTGRES_DB
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_BUCKET
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_REGION
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_PROFILE
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_PROFILE
            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: URL
          volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret